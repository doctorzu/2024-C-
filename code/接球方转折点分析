import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

# Loading the second dataset for training a new model
file_path_2 = '/mnt/data/server_2_data.csv'
data_2 = pd.read_csv(file_path_2)

# Separating features and target variable
X_2 = data_2.drop('Label', axis=1)
y_2 = data_2['Label']

# Normalizing the data
scaler_2 = StandardScaler()
X_2_scaled = scaler_2.fit_transform(X_2)

# Splitting the data into training and test sets
X_2_train, X_2_test, y_2_train, y_2_test = train_test_split(X_2_scaled, y_2, test_size=0.2, random_state=42)

# Training a new logistic regression model on the second dataset
model_2 = LogisticRegression()
model_2.fit(X_2_train, y_2_train)

# Getting the coefficients for the second model
coefficients_2 = model_2.coef_[0]
feature_names_2 = X_2.columns
coefficients_df_2 = pd.DataFrame({'Feature': feature_names_2, 'Coefficient': coefficients_2})

# Evaluating the accuracy of the second model on the test set
accuracy_2 = model_2.score(X_2_test, y_2_test)

# Output
coefficients_df_2, accuracy_2
